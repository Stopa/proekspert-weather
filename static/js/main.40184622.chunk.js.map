{"version":3,"sources":["components/ResultsView/ResultsView.module.scss","components/TempModeToggle/TempModeToggle.module.scss","components/SearchView/SearchView.module.scss","components/DayBlock/DayBlock.module.scss","components/AppContainer/AppContainer.module.scss","components/LoadingIndicator/LoadingIndicator.module.scss","components/ErrorContainer/ErrorContainer.module.scss","data/TEMP_MODES.js","store/actions/ui.js","store/actions/forecast.js","store/reducers/ui.js","store/reducers/index.js","store/reducers/forecast.js","store/index.js","components/LoadingIndicator/index.js","components/LoadingIndicator/LoadingIndicator.jsx","components/ErrorContainer/index.js","components/ErrorContainer/ErrorContainer.jsx","components/SearchView/SearchView.jsx","components/SearchView/index.js","components/WeatherConditionIcon/index.js","components/WeatherConditionIcon/WeatherConditionIcon.jsx","hooks/useTemp.js","components/DayBlock/index.js","components/DayBlock/DayBlock.jsx","components/TempModeToggle/TempModeToggle.jsx","components/TempModeToggle/index.js","components/ResultsView/ResultsView.jsx","components/ResultsView/index.js","components/AppContainer/AppContainer.jsx","components/AppContainer/index.js","components/App/App.jsx","components/App/index.js","index.jsx"],"names":["module","exports","ResultsView","Header","end","BackButton","Now","Now_Condition_Text","Now_Body","Now_Condition","icon","TemperaturesTable","Days","TempModeToggle","Handle","TempModeToggleActive","Inner","SearchForm","SearchForm_control","SearchForm_gps","DayBlock","AppContainer","LoadingIndicator","spin","ErrorContainer","TEMP_MODES","C","F","SET_QUERY","SET_ERROR","setError","message","type","payload","SET_MODE","SHOW_RESULTS","HIDE_RESULTS","REQUEST_FORECAST","RECEIVE_FORECAST","receiveForecast","forecast","appCacheKey","fetchForecast","_fetchForecastThunk","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","_getState","query","protocol","requestURL","response","json","_json$current","last_updated_epoch","code","temp_c","temp_f","forecastday","current","days","wrap","_context","prev","next","ui","window","location","URL","concat","searchParams","set","config","api_key","fetch","sent","error","Error","condition","date","conditionCode","tempC","tempF","map","day","date_epoch","_day$day","maxTempC","maxtemp_c","maxTempF","maxtemp_f","minTempC","mintemp_c","minTempF","mintemp_f","avgTempC","avgtemp_c","avgTempF","avgtemp_f","name","localStorage","setItem","JSON","stringify","abrupt","t0","stop","_x","_x2","apply","this","arguments","combineReducers","state","length","undefined","action","mode","loading","showResults","_action$payload$forec","createStore","rootReducer","applyMiddleware","ThunkMiddleware","LoggerMiddleware","react_default","createElement","className","classes","aria-label","props","connect","SearchView","changeQuery","setQuery","doSearch","doSetError","changeListener","useCallback","event","currentTarget","value","trim","submitListener","preventDefault","geolocationSuccess","position","_position$coords","coords","latitude","longitude","join","geolocationError","gpsButtonClickListener","navigator","geolocation","getCurrentPosition","onSubmit","placeholder","onChange","disabled","onClick","WeatherConditionIcon","conditions","description","title","useTemp","c","f","useSelector","temp","temperature","dateTime","moment","format","components_WeatherConditionIcon","changeMode","keys","includes","setMode","otherOptionKey","find","option","otherOption","clickListener","buttonClasses","push","objectSpread","goToSearch","currentCondition","currentTemperature","today","maxTemperature","minTemperature","avgTemperature","components_TempModeToggle","scope","components_DayBlock","assign","key","unix","_state$ui","components_LoadingIndicator","components_ErrorContainer","components_ResultsView","components_SearchView","App","useEffect","cache","parse","getItem","store","es","components_AppContainer","root","document","getElementById","ReactDOM","render","components_App"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,YAAA,iCAAAC,OAAA,4BAAAC,IAAA,yBAAAC,WAAA,gCAAAC,IAAA,yBAAAC,mBAAA,wCAAAC,SAAA,8BAAAC,cAAA,mCAAAC,KAAA,0BAAAC,kBAAA,uCAAAC,KAAA,gDCAlBZ,EAAAC,QAAA,CAAkBY,eAAA,uCAAAC,OAAA,+BAAAC,qBAAA,6CAAAC,MAAA,yxGCAlBhB,EAAAC,QAAA,CAAkBgB,WAAA,+BAAAC,mBAAA,uCAAAC,eAAA,0DCAlBnB,EAAAC,QAAA,CAAkBmB,SAAA,2BAAAV,KAAA,iHCAlBV,EAAAC,QAAA,CAAkBoB,aAAA,qDCAlBrB,EAAAC,QAAA,CAAkBqB,iBAAA,2CAAAC,KAAA,iDCAlBvB,EAAAC,QAAA,CAAkBuB,eAAA,8NCCHC,EAAA,CACbC,EAAG,IACHC,EAAG,KCAQC,EAAY,YAWlB,IAAMC,EAAY,YAElB,SAASC,EAASC,GACvB,MAAO,CACLC,KAAMH,EACNI,QAAS,CACPF,YAKC,IAAMG,EAAW,WAejB,IAAMC,EAAe,eAQrB,IAAMC,EAAe,oDCzCfC,EAAmB,mBAQzB,IAAMC,EAAmB,mBAEhC,SAASC,EAAgBC,GACvB,MAAO,CACLR,KAAMM,EACNL,QAAS,CACPO,aAKC,IAAMC,EAAc,kBAEpB,SAASC,IACd,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAkCC,EAAoBC,GAAtD,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzB,EAAAT,EAAA,OAAAe,EAAAC,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAjB,EACqBD,IAAZE,EADTD,EACGkB,GAAMjB,MAEdH,EAtBK,CACLlB,KAAMK,IAkBD8B,EAAAC,KAAA,EAMKd,EAAaiB,OAAOC,SAApBlB,UAEFC,EAAa,IAAIkB,IAAJ,GAAAC,OAAWpB,EAAX,sCAERqB,aAAaC,IAAI,OAAQ,KACpCrB,EAAWoB,aAAaC,IAAI,IAAKvB,GACjCE,EAAWoB,aAAaC,IAAI,MAAOC,EAAOC,SAZvCX,EAAAE,KAAA,GAcoBU,MAAMxB,GAd1B,eAcGC,EAdHW,EAAAa,KAAAb,EAAAE,KAAA,GAgBgBb,EAASC,OAhBzB,aAgBGA,EAhBHU,EAAAa,MAkBMC,MAlBN,CAAAd,EAAAE,KAAA,eAmBK,IAAIa,MAAMzB,EAAKwB,MAAMlD,SAnB1B,eAAA2B,EA6BCD,EANFO,QAGEL,EA1BDD,EA0BCC,mBAAiCC,EA1BlCF,EA0BqByB,UAAavB,KAAQC,EA1B1CH,EA0B0CG,OAAQC,EA1BlDJ,EA0BkDI,OAEvCC,EACVN,EADFjB,SAAYuB,YAGRC,EAAU,CAGdoB,KAA2B,IAArBzB,EACN0B,cAAezB,EACf0B,MAAOzB,EACP0B,MAAOzB,GAGHG,EAAOF,EAAYyB,IAAI,SAACC,GAAQ,IAIlCC,EAWED,EAXFC,WAJkCC,EAehCF,EAVFA,IAYF,MAAO,CAGLL,KAAmB,IAAbM,EACNL,cArBkCM,EAMhCR,UAAavB,KAgBfgC,SAtBkCD,EAOhCE,UAgBFC,SAvBkCH,EAQhCI,UAgBFC,SAxBkCL,EAShCM,UAgBFC,SAzBkCP,EAUhCQ,UAgBFC,SA1BkCT,EAWhCU,UAgBFC,SA3BkCX,EAYhCY,aAmBA/D,EAAW,CACfgC,SAAUf,EAAKe,SAASgC,KACxBxC,UACAC,QAGFM,OAAOkC,aAAaC,QAAQjE,EAAakE,KAAKC,UAAUpE,IA7ErD2B,EAAA0C,OAAA,SA+EI3D,EAASX,EAAgBC,KA/E7B,eAAA2B,EAAAC,KAAA,GAAAD,EAAA2C,GAAA3C,EAAA,SAiFKpC,EAjFLoC,EAAA2C,GAiFK/E,QAjFLoC,EAAA0C,OAAA,SAmFI3D,EAASpB,EAASC,KAnFtB,yBAAAoC,EAAA4C,SAAA9D,EAAA,kBAAP,gBAAA+D,EAAAC,GAAA,OAAAtE,EAAAuE,MAAAC,KAAAC,YAAA,GCwCaC,kBAAgB,CAC7BhE,MA5DF,WAAqC,IAAtBiE,EAAsBF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAd,KAAMK,EAAQL,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACnC,OAAQC,EAAOzF,MACb,KAAKJ,EACH,OAAO6F,EAAOxF,QAAQoB,MACxB,KAAKf,EAGH,OAFqBmF,EAAOxF,QAAQO,SAA5BgC,SAIV,QACE,OAAO8C,IAmDXI,KA/CF,WAA4C,IAA9BJ,EAA8BF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB3F,EAAWC,EAAG+F,EAAQL,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EAC1C,OAAQC,EAAOzF,MACb,KAAKE,EACH,OAAOuF,EAAOxF,QAAQyF,KACxB,QACE,OAAOJ,IA2CXrC,MAvCF,WAAqC,IAAtBqC,EAAsBF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAd,KAAMK,EAAQL,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACnC,OAAQC,EAAOzF,MACb,KAAKH,EACH,OAAO4F,EAAOxF,QAAQF,QACxB,KAAKO,EACH,OAAO,KACT,QACE,OAAOgF,IAiCXK,QA7BF,WAAwC,IAAvBL,EAAuBF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,IAAAA,UAAA,GACtC,QADsCA,UAAAG,OAAA,EAAAH,UAAA,QAAAI,GACvBxF,MACb,KAAKK,EACH,OAAO,EACT,KAAKC,EACL,KAAKT,EACH,OAAO,EACT,QACE,OAAOyF,IAsBXM,YAlBF,WAA4C,IAAvBN,EAAuBF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,IAAAA,UAAA,GAC1C,QAD0CA,UAAAG,OAAA,EAAAH,UAAA,QAAAI,GAC3BxF,MACb,KAAKG,EACL,KAAKG,EACH,OAAO,EACT,KAAKF,EACL,KAAKP,EACH,OAAO,EACT,QACE,OAAOyF,MC3DED,kBAAgB,CAC7B/C,KACA9B,SCHa,WAA2D,IAAzC8E,EAAyCF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB,KAAMK,EAAgBL,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACxE,OAAQC,EAAOzF,MACb,KAAKM,EAAkB,IAAAuF,EACKJ,EAAOxF,QAAQO,SAEzC,MAAO,CAAEwB,QAHY6D,EACb7D,QAEUC,KAHG4D,EACJ5D,MAInB,QACE,OAAOqD,MCNEQ,cACbC,EACAC,YAAgBC,IAAiBC,wCCRpB5G,MCIA,WACb,OAAO6G,EAAApF,EAAAqF,cAAA,OAAKC,UAAS,kBAAA3D,OAAoB4D,IAAQhH,kBAAoBiH,aAAW,WAAzE,0BCLM/G,MCQA,SAAwBgH,GAAc,IAC3CzG,EAAYyG,EAAZzG,QAER,OAAOoG,EAAApF,EAAAqF,cAAA,OAAKC,UAAWC,IAAQ9G,gBAAkBO,qBCoFpC0G,IC/FAC,ED+FAD,YAhBf,SAAyBnB,GAGvB,MAAO,CACLjE,MAHwBiE,EAAlBhD,GAAMjB,QAOhB,SAA4BH,GAC1B,MAAO,CACLyF,YAAa,SAAAtF,GAAK,OAAIH,EVrFnB,SAAkBG,GACvB,MAAO,CACLrB,KAAMJ,EACNK,QAAS,CACPoB,UUiF6BuF,CAASvF,KACxCwF,SAAU,kBAAM3F,EAASR,MACzBoG,WAAY,SAAA/G,GAAO,OAAImB,EAASpB,EAASC,OAI9B0G,CA5Ef,SAAoBD,GAAc,IAE9BnF,EACEmF,EADFnF,MAAOsF,EACLH,EADKG,YAAaE,EAClBL,EADkBK,SAAUC,EAC5BN,EAD4BM,WAG1BC,EAAiBC,sBAAY,SAACC,GAClCN,EAAYM,EAAMC,cAAcC,MAAMC,SACrC,CAACT,IAEEU,EAAiBL,sBAAY,SAACC,GAClCA,EAAMK,iBAENT,KACC,CAACA,IAEEU,EAAqBP,sBAAY,SAACQ,GAAa,IAAAC,EACPD,EAApCE,OAAUC,EADiCF,EACjCE,SAAUC,EADuBH,EACvBG,UAE5BjB,EAAY,CAACgB,EAAUC,GAAWC,KAAK,MAEvChB,KACC,CAACF,EAAaE,IAEXiB,EAAmBd,sBAAY,WACnCF,EAAW,mCACV,CAACA,IAEEiB,EAAyBf,sBAAY,WACzC,OAAKgB,WAAcA,UAAUC,aAM7BD,UAAUC,YAAYC,mBACpBX,EACAO,GAGK,OAVLhI,EAAS,8CAEF,OASR,CAACyH,EAAoBO,IAExB,OACE3B,EAAApF,EAAAqF,cAAA,QAAMX,OAAO,IAAI0C,SAAUd,EAAgBhB,UAAWC,IAAQrH,YAC5DkH,EAAApF,EAAAqF,cAAA,OAAKC,UAAWC,IAAQpH,oBACtBiH,EAAApF,EAAAqF,cAAA,WACED,EAAApF,EAAAqF,cAAA,SAAOpG,KAAK,SAASoI,YAAY,OAAO7B,aAAW,sBAAsBY,MAAO9F,GAAS,GAAIgH,SAAUtB,KAEzGZ,EAAApF,EAAAqF,cAAA,UAAQpG,KAAK,SAASqG,UAAU,iBAAiBiC,SAAoB,KAAVjH,GAA3D,WALJ,KAQE8E,EAAApF,EAAAqF,cAAA,UAAQpG,KAAK,SAASqG,UAAWC,IAAQnH,eAAgBoJ,QAASR,GAAlE,SAEG,IACD5B,EAAApF,EAAAqF,cAAA,iGEzEOoC,MCQA,SAA8BhC,GAAc,IACjD5E,EAAS4E,EAAT5E,KAEFuB,EAAYsF,EAAW7G,GAE7B,IAAKuB,EACH,MAAM,IAAID,MAAM,oCAGlB,OACEiD,EAAApF,EAAAqF,cAAA,KACEG,aAAYpD,EAAUuF,YACtBC,MAAOxF,EAAUuF,YACjBrC,UAAS,MAAA3D,OAAQS,EAAUzE,SCVlB,SAASkK,EAAQC,EAAGC,GACjC,IAAMpD,EAAOqD,YAAY,SAAAzD,GAAK,OAAIA,EAAMhD,GAAGoD,OAErCsD,EAAOtD,IAASjG,EAAWC,EAAImJ,EAAIC,EAEzC,SAAApG,OAAUsG,EAAV,QAAAtG,OAAkBgD,GChBLtG,MCaA,SAAkBoH,GAAc,IAE3CpD,EACEoD,EADFpD,KAAMgB,EACJoC,EADIpC,SAAUE,EACdkC,EADclC,SAAUjB,EACxBmD,EADwBnD,cAGtB4F,EAAcL,EAAQxE,EAAUE,GAEtC,OACE6B,EAAApF,EAAAqF,cAAA,WAASC,UAAWC,IAAQlH,UAC1B+G,EAAApF,EAAAqF,cAAA,QAAM8C,SAAU9F,GAAQ+F,IAAO/F,GAAMgG,OAAO,SAC5CjD,EAAApF,EAAAqF,cAAA,QAAMC,UAAWC,IAAQ5H,MACvByH,EAAApF,EAAAqF,cAACiD,EAAD,CAAsBzH,KAAMyB,KAE5B4F,qBCiDOxC,IC3EA5H,GD2EA4H,YAdf,SAAyBnB,GAGvB,MAAO,CACLI,KAHuBJ,EAAjBhD,GAAMoD,OAOhB,SAA4BxE,GAC1B,MAAO,CACLoI,WAAY,SAAA5D,GAAI,OAAIxE,EjB7CjB,SAAiBwE,GACtB,IAAK9E,OAAO2I,KAAK9J,GAAY+J,SAAS9D,GACpC,MAAM,IAAIxC,MAAJ,sCAAAR,OAAgDgD,IAGxD,MAAO,CACL1F,KAAME,EACND,QAAS,CACPyF,SiBqC2B+D,CAAQ/D,OAI1Be,CAzDf,SAAwBD,GAAc,IAC5Bd,EAAqBc,EAArBd,KAAM4D,EAAe9C,EAAf8C,WAERC,EAAO3I,OAAO2I,KAAK9J,GAEnBiK,EAAiBH,EAAKI,KAAK,SAAAC,GAAM,OAAInK,EAAWmK,KAAYlE,IAElE,QAAuBF,IAAnBkE,EACF,MAAM,IAAIxG,MAAM,gDAGlB,IAAM2G,EAAcpK,EAAWiK,GAEzBI,EAAgB9C,sBAAY,WAChCsC,EAAWO,IACV,CAACP,EAAYO,IAEVE,EAAgB,CAACzD,KAAQzH,gBAM/B,OAJI6G,IAASjG,EAAW8J,EAAK,KAC3BQ,EAAcC,KAAK1D,KAAQvH,sBAI3BoH,EAAApF,EAAAqF,cAAA,UACEpG,KAAK,SACLqG,UAAW0D,EAAclC,KAAK,KAC9BU,QAASuB,EACTvD,aAAA,2BAAA7D,OAAoCmH,IAEpC1D,EAAApF,EAAAqF,cAAA,QAAMC,UAAWC,KAAQtH,OACvBmH,EAAApF,EAAAqF,cAAA,mBAAA1D,OACQjD,EAAW8J,EAAK,MAExBpD,EAAApF,EAAAqF,cAAA,QAAMC,UAAWC,KAAQxH,SACzBqH,EAAApF,EAAAqF,cAAA,mBAAA1D,OACQjD,EAAW8J,EAAK,UE8DjB9C,ICpHAvI,GDoHAuI,YAff,SAAyBnB,GAAO,IACtB9E,EAA4B8E,EAA5B9E,SAAgBa,EAAYiE,EAAlBhD,GAAMjB,MAExB,OAAOT,OAAAqJ,EAAA,EAAArJ,CAAA,GACFJ,EADL,CAEEa,WAIJ,SAA4BH,GAC1B,MAAO,CACLgJ,WAAY,kBAAMhJ,EnB9Db,CACLlB,KAAMI,OmBiEKqG,CA1Ff,SAAqBD,GAAc,IAE/B0D,EACE1D,EADF0D,WAAYlI,EACVwE,EADUxE,QAASC,EACnBuE,EADmBvE,KAAMZ,EACzBmF,EADyBnF,MAGrBiC,EAAiBtB,EAAjBsB,MAAOC,EAAUvB,EAAVuB,MAET4G,EAAmB1B,EAAWzG,EAAQqB,eAE5C,IAAK8G,EACH,MAAM,IAAIjH,MAAM,oCAGlB,IAAMkH,EAAqBxB,EAAQtF,EAAOC,GAEpC8G,EAAQpI,EAAK,GAEbqI,EAAiB1B,EAAQyB,EAAMzG,SAAUyG,EAAMvG,UAE/CyG,EAAiB3B,EAAQyB,EAAMrG,SAAUqG,EAAMnG,UAE/CsG,EAAiB5B,EAAQyB,EAAMjG,SAAUiG,EAAM/F,UAErD,OACE6B,EAAApF,EAAAqF,cAAA,WAASC,UAAWC,IAAQpI,aAC1BiI,EAAApF,EAAAqF,cAAA,UAAQC,UAAWC,IAAQnI,QACzBgI,EAAApF,EAAAqF,cAAA,UAAQpG,KAAK,SAASuG,aAAW,iBAAiBF,UAAS,GAAA3D,OAAK4D,IAAQjI,WAAb,mBAA0CkK,QAAS2B,GAA9G,cACA/D,EAAApF,EAAAqF,cAAA,UAAM/E,GACN8E,EAAApF,EAAAqF,cAAA,QAAMC,UAAWC,IAAQlI,KACvB+H,EAAApF,EAAAqF,cAACqE,GAAD,QAGJtE,EAAApF,EAAAqF,cAAA,WAASC,UAAWC,IAAQhI,KAC1B6H,EAAApF,EAAAqF,cAAA,QAAM8C,SAAUlH,EAAQoB,MAAQ+F,IAAOnH,EAAQoB,MAAMgG,OAAO,uBAC5DjD,EAAApF,EAAAqF,cAAA,OAAKC,UAAWC,IAAQ/H,oBACpB4L,EAAiBzB,aAErBvC,EAAApF,EAAAqF,cAAA,WAASC,UAAWC,IAAQ9H,UAC1B2H,EAAApF,EAAAqF,cAAA,WAASC,UAAWC,IAAQ7H,eACxB2L,EACFjE,EAAApF,EAAAqF,cAAA,QAAMC,UAAWC,IAAQ5H,MACvByH,EAAApF,EAAAqF,cAACiD,EAAD,CAAsBzH,KAAMI,EAAQqB,kBAGxC8C,EAAApF,EAAAqF,cAAA,SAAOC,UAAWC,IAAQ3H,mBACxBwH,EAAApF,EAAAqF,cAAA,aACED,EAAApF,EAAAqF,cAAA,UACED,EAAApF,EAAAqF,cAAA,MAAIsE,MAAM,OAAV,WACAvE,EAAApF,EAAAqF,cAAA,UACIkE,IAGNnE,EAAApF,EAAAqF,cAAA,UACED,EAAApF,EAAAqF,cAAA,MAAIsE,MAAM,OAAV,UACAvE,EAAApF,EAAAqF,cAAA,UACImE,IAGNpE,EAAApF,EAAAqF,cAAA,UACED,EAAApF,EAAAqF,cAAA,MAAIsE,MAAM,OAAV,WACAvE,EAAApF,EAAAqF,cAAA,UACIoE,QAOdrE,EAAApF,EAAAqF,cAAA,WAASC,UAAWC,IAAQ1H,MACxBqD,EAAKuB,IAAI,SAAAC,GAAG,OAAI0C,EAAApF,EAAAqF,cAACuE,EAAD/J,OAAAgK,OAAA,CAAUC,IAAK1B,IAAO1F,EAAIL,MAAM0H,QAAYrH,UErDvDgD,IC1CApH,GD0CAoH,YAVf,SAAyBnB,GAAO,IAAAyF,EACkBzF,EAAxChD,GAAMqD,EADgBoF,EAChBpF,QAEd,MAAO,CACLC,YAJ4BmF,EACPnF,YAIrBD,UACA1C,MAN4B8H,EACM9H,QASvBwD,CA1Bf,SAAsBD,GAAc,IAC1BZ,EAAgCY,EAAhCZ,YAAaD,EAAmBa,EAAnBb,QAAS1C,EAAUuD,EAAVvD,MAE9B,OACEkD,EAAApF,EAAAqF,cAAA,QAAMC,UAAWC,IAAQjH,cACrBsG,GAAWQ,EAAApF,EAAAqF,cAAC4E,EAAD,MACX/H,GAASkD,EAAApF,EAAAqF,cAAC6E,EAAD,CAAgBlL,QAASkD,IAElC2C,EACIO,EAAApF,EAAAqF,cAAC8E,GAAD,MACA/E,EAAApF,EAAAqF,cAAC+E,EAAD,SEIGC,IC9BAA,GDaf,WAUE,OARAC,oBAAU,WACR,ItBoGqC7K,EsBpG/B8K,EAAQ3G,KAAK4G,MAAMhJ,OAAOkC,aAAa+G,QAAQ/K,IAEvC,OAAV6K,GACFG,EAAMvK,UtBiG6BV,EsBjGK8K,EtBkGrC,SAAuCpK,GAG5C,OAFAA,EAASX,EAAgBC,IAElBU,EAASR,SsBnGf,IAGDyF,EAAApF,EAAAqF,cAACsF,EAAA,EAAD,CAAUD,MAAOA,GACftF,EAAApF,EAAAqF,cAACuF,GAAD,QEnBAC,GAAOC,SAASC,eAAe,QAErC,IAAIF,GAGF,MAAM,IAAI1I,MAAM,2BAFhB6I,IAASC,OAAO7F,EAAApF,EAAAqF,cAAC6F,GAAD,MAASL","file":"static/js/main.40184622.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResultsView\":\"ResultsView_ResultsView__1WBJ0\",\"Header\":\"ResultsView_Header__14Zg0\",\"end\":\"ResultsView_end__1MCWP\",\"BackButton\":\"ResultsView_BackButton__2Uh30\",\"Now\":\"ResultsView_Now__26F7r\",\"Now_Condition_Text\":\"ResultsView_Now_Condition_Text__2TscT\",\"Now_Body\":\"ResultsView_Now_Body__3snN8\",\"Now_Condition\":\"ResultsView_Now_Condition__F8l7c\",\"icon\":\"ResultsView_icon__3CYnk\",\"TemperaturesTable\":\"ResultsView_TemperaturesTable__1WBot\",\"Days\":\"ResultsView_Days__1Rxud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TempModeToggle\":\"TempModeToggle_TempModeToggle__3O34g\",\"Handle\":\"TempModeToggle_Handle__3VTcC\",\"TempModeToggleActive\":\"TempModeToggle_TempModeToggleActive__hehfn\",\"Inner\":\"TempModeToggle_Inner__tncWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchView_SearchForm__3Cq35\",\"SearchForm_control\":\"SearchView_SearchForm_control__Xd8vM\",\"SearchForm_gps\":\"SearchView_SearchForm_gps__2n8SH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayBlock\":\"DayBlock_DayBlock__1F3So\",\"icon\":\"DayBlock_icon__1mHCv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__3Gsm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__3V0ld\",\"spin\":\"LoadingIndicator_spin__3R1kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorContainer\":\"ErrorContainer_ErrorContainer__3DB_p\"};","// @flow\n\nexport default {\n  C: 'C',\n  F: 'F',\n};\n","// @flow\n\nimport TEMP_MODES from '../../data/TEMP_MODES';\n\nexport const SET_QUERY = 'SET_QUERY';\n\nexport function setQuery(query: ?string) {\n  return {\n    type: SET_QUERY,\n    payload: {\n      query,\n    },\n  };\n}\n\nexport const SET_ERROR = 'SET_ERROR';\n\nexport function setError(message: string) {\n  return {\n    type: SET_ERROR,\n    payload: {\n      message,\n    },\n  };\n}\n\nexport const SET_MODE = 'SET_MODE';\n\nexport function setMode(mode: string) {\n  if (!Object.keys(TEMP_MODES).includes(mode)) {\n    throw new Error(`Invalid temperature mode provided: ${mode}`);\n  }\n\n  return {\n    type: SET_MODE,\n    payload: {\n      mode,\n    },\n  };\n}\n\nexport const SHOW_RESULTS = 'SHOW_RESULTS';\n\nexport function showResults() {\n  return {\n    type: SHOW_RESULTS,\n  };\n}\n\nexport const HIDE_RESULTS = 'HIDE_RESULTS';\n\nexport function hideResults() {\n  return {\n    type: HIDE_RESULTS,\n  };\n}\n","// @flow\n\nimport { setError } from './ui';\n\nimport type { Forecast } from '../../types/Forecast';\n\nimport config from '../../config.json';\n\nexport const REQUEST_FORECAST = 'REQUEST_FORECAST';\n\nfunction requestForecast() {\n  return {\n    type: REQUEST_FORECAST,\n  };\n}\n\nexport const RECEIVE_FORECAST = 'RECEIVE_FORECAST';\n\nfunction receiveForecast(forecast) {\n  return {\n    type: RECEIVE_FORECAST,\n    payload: {\n      forecast,\n    },\n  };\n}\n\nexport const appCacheKey = 'weatherAppCache';\n\nexport function fetchForecast() {\n  return async function fetchForecastThunk(dispatch: Function, getState: Function) {\n    const { ui: { query } } = getState();\n\n    dispatch(requestForecast());\n\n    try {\n      const { protocol } = window.location;\n\n      const requestURL = new URL(`${protocol}//api.apixu.com/v1/forecast.json`);\n\n      requestURL.searchParams.set('days', '7');\n      requestURL.searchParams.set('q', query);\n      requestURL.searchParams.set('key', config.api_key);\n\n      const response = await fetch(requestURL);\n\n      const json = await response.json();\n\n      if (json.error) {\n        throw new Error(json.error.message);\n      }\n\n      const {\n        current: {\n          // ESLint suppression - This data comes from Apixu and is beyond my control\n          // eslint-disable-next-line camelcase\n          last_updated_epoch, condition: { code }, temp_c, temp_f,\n        },\n        forecast: { forecastday },\n      } = json;\n\n      const current = {\n        // ESLint suppression - This data comes from Apixu and is beyond my control\n        // eslint-disable-next-line camelcase\n        date: last_updated_epoch * 1000,\n        conditionCode: code,\n        tempC: temp_c,\n        tempF: temp_f,\n      };\n\n      const days = forecastday.map((day) => {\n        const {\n          // ESLint suppression - This data comes from Apixu and is beyond my control\n          /* eslint-disable camelcase */\n          date_epoch,\n          day: {\n            condition: { code: dayCode },\n            maxtemp_c,\n            maxtemp_f,\n            mintemp_c,\n            mintemp_f,\n            avgtemp_c,\n            avgtemp_f,\n          },\n          /* eslint-enable */\n        } = day;\n\n        return {\n          // ESLint suppression - This data comes from Apixu and is beyond my control\n          // eslint-disable-next-line camelcase\n          date: date_epoch * 1000,\n          conditionCode: dayCode,\n          maxTempC: maxtemp_c,\n          maxTempF: maxtemp_f,\n          minTempC: mintemp_c,\n          minTempF: mintemp_f,\n          avgTempC: avgtemp_c,\n          avgTempF: avgtemp_f,\n        };\n      });\n\n      const forecast = {\n        location: json.location.name,\n        current,\n        days,\n      };\n\n      window.localStorage.setItem(appCacheKey, JSON.stringify(forecast));\n\n      return dispatch(receiveForecast(forecast));\n    } catch (e) {\n      const { message } = e;\n\n      return dispatch(setError(message));\n    }\n  };\n}\n\nexport function restoreForecastFromCache(forecast: Forecast) {\n  return function restoreForecastFromCacheThunk(dispatch: Function) {\n    dispatch(receiveForecast(forecast));\n\n    return dispatch(fetchForecast());\n  };\n}\n","// @flow\n\nimport { combineReducers } from 'redux';\n\nimport TEMP_MODES from '../../data/TEMP_MODES';\n\nimport {\n  SET_QUERY, SET_ERROR, SET_MODE, SHOW_RESULTS, HIDE_RESULTS,\n} from '../actions/ui';\nimport { REQUEST_FORECAST, RECEIVE_FORECAST } from '../actions/forecast';\n\nfunction query(state = null, action) {\n  switch (action.type) {\n    case SET_QUERY:\n      return action.payload.query;\n    case RECEIVE_FORECAST: {\n      const { location } = action.payload.forecast;\n\n      return location;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction mode(state = TEMP_MODES.C, action) {\n  switch (action.type) {\n    case SET_MODE:\n      return action.payload.mode;\n    default:\n      return state;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload.message;\n    case RECEIVE_FORECAST:\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction loading(state = false, action) {\n  switch (action.type) {\n    case REQUEST_FORECAST:\n      return true;\n    case RECEIVE_FORECAST:\n    case SET_ERROR:\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction showResults(state = false, action) {\n  switch (action.type) {\n    case SHOW_RESULTS:\n    case RECEIVE_FORECAST:\n      return true;\n    case HIDE_RESULTS:\n    case SET_ERROR:\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  query,\n  mode,\n  error,\n  loading,\n  showResults,\n});\n","// @flow\n\nimport { combineReducers } from 'redux';\n\nimport ui from './ui';\nimport forecast from './forecast';\n\nexport default combineReducers({\n  ui,\n  forecast,\n});\n","// @flow\n\nimport { RECEIVE_FORECAST } from '../actions/forecast';\n\nimport type { Forecast } from '../../types/Forecast';\n\nexport default function forecast(state: ?Forecast = null, action: Object) {\n  switch (action.type) {\n    case RECEIVE_FORECAST: {\n      const { current, days } = action.payload.forecast;\n\n      return { current, days };\n    }\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport { createStore, applyMiddleware } from 'redux';\nimport ThunkMiddleware from 'redux-thunk';\nimport LoggerMiddleware from 'redux-logger';\n\nimport rootReducer from './reducers';\n\nexport default createStore(\n  rootReducer,\n  applyMiddleware(ThunkMiddleware, LoggerMiddleware),\n);\n","import LoadingIndicator from './LoadingIndicator';\n\nexport default LoadingIndicator;\n","// @flow\n\nimport React from 'react';\n\nimport classes from './LoadingIndicator.module.scss';\n\nexport default function LoadingIndicator() {\n  return <div className={`material-icons ${classes.LoadingIndicator}`} aria-label=\"Loading\">sync</div>;\n}\n","import ErrorContainer from './ErrorContainer';\n\nexport default ErrorContainer;\n","// @flow\n\nimport React from 'react';\n\nimport classes from './ErrorContainer.module.scss';\n\ntype Props = {\n  message: string,\n}\n\nexport default function ErrorContainer(props: Props) {\n  const { message } = props;\n\n  return <div className={classes.ErrorContainer}>{ message }</div>;\n}\n","// @flow\n\n/**\n * Flow suppression as it doesn't seem to support React Hooks in my version\n */\n// $FlowFixMe\nimport React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './SearchView.module.scss';\n\nimport { setQuery, setError } from '../../store/actions/ui';\nimport { fetchForecast } from '../../store/actions/forecast';\n\ntype Props = {\n  query: string,\n  changeQuery: Function,\n  doSearch: Function,\n  doSetError: Function,\n}\n\nfunction SearchView(props: Props) {\n  const {\n    query, changeQuery, doSearch, doSetError,\n  } = props;\n\n  const changeListener = useCallback((event) => {\n    changeQuery(event.currentTarget.value.trim());\n  }, [changeQuery]);\n\n  const submitListener = useCallback((event) => {\n    event.preventDefault();\n\n    doSearch();\n  }, [doSearch]);\n\n  const geolocationSuccess = useCallback((position) => {\n    const { coords: { latitude, longitude } } = position;\n\n    changeQuery([latitude, longitude].join(','));\n\n    doSearch();\n  }, [changeQuery, doSearch]);\n\n  const geolocationError = useCallback(() => {\n    doSetError('Could not get current position');\n  }, [doSetError]);\n\n  const gpsButtonClickListener = useCallback(() => {\n    if (!navigator || !navigator.geolocation) {\n      setError('Your browser does not support geolocation.');\n\n      return null;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      geolocationSuccess,\n      geolocationError,\n    );\n\n    return null;\n  }, [geolocationSuccess, geolocationError]);\n\n  return (\n    <form action=\"#\" onSubmit={submitListener} className={classes.SearchForm}>\n      <div className={classes.SearchForm_control}>\n        <div>\n          <input type=\"search\" placeholder=\"City\" aria-label=\"Enter your location\" value={query || ''} onChange={changeListener} />\n        </div>\n        <button type=\"submit\" className=\"material-icons\" disabled={query === ''}>search</button>\n      </div>\n      or\n      <button type=\"button\" className={classes.SearchForm_gps} onClick={gpsButtonClickListener}>\n        use my\n        {' '}\n        <u>current position</u>\n      </button>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { ui: { query } } = state;\n\n  return {\n    query,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeQuery: query => dispatch(setQuery(query)),\n    doSearch: () => dispatch(fetchForecast()),\n    doSetError: message => dispatch(setError(message)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchView);\n","import SearchView from './SearchView';\n\nexport default SearchView;\n","import WeatherConditionIcon from './WeatherConditionIcon';\n\nexport default WeatherConditionIcon;\n","// @flow\n\nimport React from 'react';\n\nimport conditions from '../../data/weather-conditions.json';\n\ntype Props = {\n  code: Number,\n}\n\nexport default function WeatherConditionIcon(props: Props) {\n  const { code } = props;\n\n  const condition = conditions[code];\n\n  if (!condition) {\n    throw new Error('Invalid condition code provided.');\n  }\n\n  return (\n    <i\n      aria-label={condition.description}\n      title={condition.description}\n      className={`wi ${condition.icon}`}\n    />\n  );\n}\n","// @flow\n\nimport { useSelector } from 'react-redux';\n\nimport TEMP_MODES from '../data/TEMP_MODES';\n\n/**\n * A custom React-Redux Hook for formatting temperature.\n *\n * @param {number} c Temperature in degrees Celsius\n * @param {number} f Temperature in degrees Fahrenheit\n * @returns {string} Formatted temperature string with the right measurement attached.\n */\nexport default function useTemp(c, f) {\n  const mode = useSelector(state => state.ui.mode);\n\n  const temp = mode === TEMP_MODES.C ? c : f;\n\n  return `${temp}°${mode}`;\n}\n","import DayBlock from './DayBlock';\n\nexport default DayBlock;\n","// @flow\n\nimport React from 'react';\nimport moment from 'moment';\n\nimport classes from './DayBlock.module.scss';\n\nimport type { ForecastDay } from '../../types/ForecastDay';\n\nimport WeatherConditionIcon from '../WeatherConditionIcon';\n\nimport useTemp from '../../hooks/useTemp';\n\ntype Props = ForecastDay;\n\nexport default function DayBlock(props: Props) {\n  const {\n    date, avgTempC, avgTempF, conditionCode,\n  } = props;\n\n  const temperature = useTemp(avgTempC, avgTempF);\n\n  return (\n    <article className={classes.DayBlock}>\n      <time dateTime={date}>{ moment(date).format('dddd') }</time>\n      <span className={classes.icon}>\n        <WeatherConditionIcon code={conditionCode} />\n      </span>\n      { temperature }\n    </article>\n  );\n}\n","// @flow\n\n/**\n * Flow suppression as it doesn't seem to support React Hooks in my version\n */\n// $FlowFixMe\nimport React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './TempModeToggle.module.scss';\n\nimport { setMode } from '../../store/actions/ui';\n\nimport TEMP_MODES from '../../data/TEMP_MODES';\n\ntype Props = {\n  mode: string,\n  changeMode: Function,\n}\n\nfunction TempModeToggle(props: Props) {\n  const { mode, changeMode } = props;\n\n  const keys = Object.keys(TEMP_MODES);\n\n  const otherOptionKey = keys.find(option => TEMP_MODES[option] !== mode);\n\n  if (otherOptionKey === undefined) {\n    throw new Error('Cannot find a temperature mode to toggle to.');\n  }\n\n  const otherOption = TEMP_MODES[otherOptionKey];\n\n  const clickListener = useCallback(() => {\n    changeMode(otherOption);\n  }, [changeMode, otherOption]);\n\n  const buttonClasses = [classes.TempModeToggle];\n\n  if (mode === TEMP_MODES[keys[1]]) {\n    buttonClasses.push(classes.TempModeToggleActive);\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={buttonClasses.join(' ')}\n      onClick={clickListener}\n      aria-label={`Show temperature in °${otherOption}`}\n    >\n      <span className={classes.Inner}>\n        <span>\n          { `°${TEMP_MODES[keys[0]]}` }\n        </span>\n        <span className={classes.Handle} />\n        <span>\n          { `°${TEMP_MODES[keys[1]]}` }\n        </span>\n      </span>\n    </button>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { ui: { mode } } = state;\n\n  return {\n    mode,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeMode: mode => dispatch(setMode(mode)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TempModeToggle);\n","import TempModeToggle from './TempModeToggle';\n\nexport default TempModeToggle;\n","// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport classes from './ResultsView.module.scss';\n\nimport { hideResults } from '../../store/actions/ui';\n\nimport conditions from '../../data/weather-conditions.json';\n\nimport type { ForecastDay } from '../../types/ForecastDay';\nimport type { ForecastCurrent } from '../../types/ForecastCurrent';\n\nimport DayBlock from '../DayBlock';\nimport TempModeToggle from '../TempModeToggle';\nimport WeatherConditionIcon from '../WeatherConditionIcon';\n\nimport useTemp from '../../hooks/useTemp';\n\ntype Props = {\n  current: ForecastCurrent,\n  days: Array<ForecastDay>,\n  goToSearch: Function,\n  query: string,\n}\n\nfunction ResultsView(props: Props) {\n  const {\n    goToSearch, current, days, query,\n  } = props;\n\n  const { tempC, tempF } = current;\n\n  const currentCondition = conditions[current.conditionCode];\n\n  if (!currentCondition) {\n    throw new Error('Invalid condition code provided.');\n  }\n\n  const currentTemperature = useTemp(tempC, tempF);\n\n  const today = days[0];\n\n  const maxTemperature = useTemp(today.maxTempC, today.maxTempF);\n\n  const minTemperature = useTemp(today.minTempC, today.minTempF);\n\n  const avgTemperature = useTemp(today.avgTempC, today.avgTempF);\n\n  return (\n    <section className={classes.ResultsView}>\n      <header className={classes.Header}>\n        <button type=\"button\" aria-label=\"Back to search\" className={`${classes.BackButton} material-icons`} onClick={goToSearch}>arrow_back</button>\n        <h1>{ query }</h1>\n        <span className={classes.end}>\n          <TempModeToggle />\n        </span>\n      </header>\n      <article className={classes.Now}>\n        <time dateTime={current.date}>{ moment(current.date).format('dddd, MMMM Do YYYY') }</time>\n        <div className={classes.Now_Condition_Text}>\n          { currentCondition.description }\n        </div>\n        <section className={classes.Now_Body}>\n          <section className={classes.Now_Condition}>\n            { currentTemperature }\n            <span className={classes.icon}>\n              <WeatherConditionIcon code={current.conditionCode} />\n            </span>\n          </section>\n          <table className={classes.TemperaturesTable}>\n            <tbody>\n              <tr>\n                <th scope=\"row\">Highest</th>\n                <td>\n                  { maxTemperature }\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Lowest</th>\n                <td>\n                  { minTemperature }\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Average</th>\n                <td>\n                  { avgTemperature }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </section>\n      </article>\n      <section className={classes.Days}>\n        { days.map(day => <DayBlock key={moment(day.date).unix()} {...day} />) }\n      </section>\n    </section>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { forecast, ui: { query } } = state;\n\n  return {\n    ...forecast,\n    query,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    goToSearch: () => dispatch(hideResults()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsView);\n","import ResultsView from './ResultsView';\n\nexport default ResultsView;\n","// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './AppContainer.module.scss';\n\nimport LoadingIndicator from '../LoadingIndicator';\nimport ErrorContainer from '../ErrorContainer';\nimport SearchView from '../SearchView';\nimport ResultsView from '../ResultsView';\n\ntype Props = {\n  loading: boolean,\n  showResults: Boolean,\n  error: ?String,\n}\n\nfunction AppContainer(props: Props) {\n  const { showResults, loading, error } = props;\n\n  return (\n    <main className={classes.AppContainer}>\n      { loading && <LoadingIndicator /> }\n      { error && <ErrorContainer message={error} /> }\n      {\n        showResults\n          ? <ResultsView />\n          : <SearchView />\n      }\n    </main>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { ui: { loading, showResults, error } } = state;\n\n  return {\n    showResults,\n    loading,\n    error,\n  };\n}\n\nexport default connect(mapStateToProps)(AppContainer);\n","import AppContainer from './AppContainer';\n\nexport default AppContainer;\n","// @flow\n\n/**\n * Flow suppression as it doesn't seem to support React Hooks in my version\n */\n// $FlowFixMe\nimport React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from '../../store';\n\nimport { restoreForecastFromCache, appCacheKey } from '../../store/actions/forecast';\n\nimport AppContainer from '../AppContainer';\n\nfunction App() {\n  // Check for previously saved forecast in localStorage\n  useEffect(() => {\n    const cache = JSON.parse(window.localStorage.getItem(appCacheKey));\n\n    if (cache !== null) {\n      store.dispatch(restoreForecastFromCache(cache));\n    }\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './components/App';\n\nconst root = document.getElementById('root');\n\nif (root) {\n  ReactDOM.render(<App />, root);\n} else {\n  throw new Error('Root element not found.');\n}\n"],"sourceRoot":""}