{"version":3,"sources":["store/actions/ui.js","data/TEMP_MODES.js","store/actions/forecast.js","components/ResultsView/ResultsView.module.scss","components/TempModeToggle/TempModeToggle.module.scss","components/SearchView/SearchView.module.scss","store/index.js","components/DayBlock/DayBlock.module.scss","components/AppContainer/AppContainer.module.scss","components/LoadingIndicator/LoadingIndicator.module.scss","components/ErrorContainer/ErrorContainer.module.scss","components/LoadingIndicator/index.js","components/LoadingIndicator/LoadingIndicator.jsx","components/ErrorContainer/index.js","components/ErrorContainer/ErrorContainer.jsx","components/SearchView/SearchView.jsx","components/SearchView/index.js","components/WeatherConditionIcon/index.js","components/WeatherConditionIcon/WeatherConditionIcon.jsx","hooks/useTemp.js","components/DayBlock/index.js","components/DayBlock/DayBlock.jsx","components/TempModeToggle/TempModeToggle.jsx","components/TempModeToggle/index.js","components/ResultsView/ResultsView.jsx","components/ResultsView/index.js","components/AppContainer/AppContainer.jsx","components/AppContainer/index.js","components/App/App.jsx","components/App/index.js","index.jsx","store/reducers/ui.js","store/reducers/index.js","store/reducers/forecast.js","store/store.prod.js"],"names":["__webpack_require__","d","__webpack_exports__","SET_QUERY","setQuery","SET_ERROR","setError","SET_MODE","setMode","SHOW_RESULTS","HIDE_RESULTS","hideResults","_data_TEMP_MODES__WEBPACK_IMPORTED_MODULE_0__","query","type","payload","message","mode","Object","keys","TEMP_MODES","includes","Error","concat","C","F","REQUEST_FORECAST","RECEIVE_FORECAST","receiveForecast","forecast","parseDay","day","date_epoch","_day$day","date","conditionCode","condition","code","maxTempC","maxtemp_c","maxTempF","maxtemp_f","minTempC","mintemp_c","minTempF","mintemp_f","avgTempC","avgtemp_c","avgTempF","avgtemp_f","appCacheKey","fetchForecast","_fetchForecastThunk","_Users_afterhours_Documents_proekspert_weather_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_afterhours_Documents_proekspert_weather_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","getState","_getState","protocol","requestURL","response","json","_json$current","last_updated_epoch","tempC","tempF","forecastday","current","days","wrap","_context","prev","next","ui","window","location","URL","searchParams","set","config","api_key","fetch","sent","error","temp_c","temp_f","map","name","localStorage","setItem","JSON","stringify","abrupt","t0","stop","_x","_x2","apply","this","arguments","restoreForecastFromCache","module","exports","ResultsView","Header","end","BackButton","Now","Now_Condition_Text","Now_Body","Now_Condition","icon","TemperaturesTable","Days","TempModeToggle","Handle","TempModeToggleActive","Inner","SearchForm","SearchForm_control","SearchForm_gps","require","DayBlock","AppContainer","LoadingIndicator","spin","ErrorContainer","react_default","createElement","className","classes","aria-label","props","connect","SearchView","state","changeQuery","doSearch","doSetError","changeListener","useCallback","event","currentTarget","value","trimStart","submitListener","preventDefault","geolocationSuccess","position","_position$coords","coords","latitude","longitude","join","geolocationError","gpsButtonClickListener","navigator","geolocation","getCurrentPosition","action","onSubmit","placeholder","onChange","disabled","onClick","WeatherConditionIcon","conditions","description","title","useTemp","c","f","useSelector","temp","temperature","dateTime","moment","format","components_WeatherConditionIcon","changeMode","otherOptionKey","find","option","undefined","otherOption","clickListener","buttonClasses","push","objectSpread","goToSearch","currentCondition","currentTemperature","today","maxTemperature","minTemperature","avgTemperature","components_TempModeToggle","scope","components_DayBlock","assign","key","unix","_state$ui","loading","showResults","components_LoadingIndicator","components_ErrorContainer","components_ResultsView","components_SearchView","App","useEffect","cache","parse","getItem","store","es","components_AppContainer","root","document","getElementById","ReactDOM","render","components_App","combineReducers","length","_action$payload$forec","createStore","rootReducer","applyMiddleware","ThunkMiddleware"],"mappings":"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","file":"static/js/main.72888d79.chunk.js","sourcesContent":["// @flow\n\nimport TEMP_MODES from '../../data/TEMP_MODES';\n\nexport const SET_QUERY = 'SET_QUERY';\n\nexport function setQuery(query: ?string) {\n  return {\n    type: SET_QUERY,\n    payload: {\n      query,\n    },\n  };\n}\n\nexport const SET_ERROR = 'SET_ERROR';\n\nexport function setError(message: string) {\n  return {\n    type: SET_ERROR,\n    payload: {\n      message,\n    },\n  };\n}\n\nexport const SET_MODE = 'SET_MODE';\n\nexport function setMode(mode: string) {\n  if (!Object.keys(TEMP_MODES).includes(mode)) {\n    throw new Error(`Invalid temperature mode provided: ${mode}`);\n  }\n\n  return {\n    type: SET_MODE,\n    payload: {\n      mode,\n    },\n  };\n}\n\nexport const SHOW_RESULTS = 'SHOW_RESULTS';\n\nexport function showResults() {\n  return {\n    type: SHOW_RESULTS,\n  };\n}\n\nexport const HIDE_RESULTS = 'HIDE_RESULTS';\n\nexport function hideResults() {\n  return {\n    type: HIDE_RESULTS,\n  };\n}\n","// @flow\n\nexport default {\n  C: 'C',\n  F: 'F',\n};\n","// @flow\n\nimport { setError } from './ui';\n\nimport type { Forecast } from '../../types/Forecast';\n\nimport config from '../../config.json';\n\nexport const REQUEST_FORECAST = 'REQUEST_FORECAST';\n\nfunction requestForecast() {\n  return {\n    type: REQUEST_FORECAST,\n  };\n}\n\nexport const RECEIVE_FORECAST = 'RECEIVE_FORECAST';\n\nfunction receiveForecast(forecast) {\n  return {\n    type: RECEIVE_FORECAST,\n    payload: {\n      forecast,\n    },\n  };\n}\n\nfunction parseDay(day) {\n  const {\n    // ESLint suppression - This data comes from Apixu and is beyond my control\n    /* eslint-disable camelcase */\n    date_epoch,\n    day: {\n      condition: { code: conditionCode },\n      maxtemp_c: maxTempC,\n      maxtemp_f: maxTempF,\n      mintemp_c: minTempC,\n      mintemp_f: minTempF,\n      avgtemp_c: avgTempC,\n      avgtemp_f: avgTempF,\n    },\n    /* eslint-enable */\n  } = day;\n\n  return {\n    // ESLint suppression - This data comes from Apixu and is beyond my control\n    // eslint-disable-next-line camelcase\n    date: date_epoch * 1000,\n    conditionCode,\n    maxTempC,\n    maxTempF,\n    minTempC,\n    minTempF,\n    avgTempC,\n    avgTempF,\n  };\n}\n\nexport const appCacheKey = 'weatherAppCache';\n\nexport function fetchForecast() {\n  return async function fetchForecastThunk(dispatch: Function, getState: Function) {\n    const { ui: { query } } = getState();\n\n    dispatch(requestForecast());\n\n    try {\n      const { protocol } = window.location;\n\n      const requestURL = new URL(`${protocol}//api.apixu.com/v1/forecast.json`);\n\n      requestURL.searchParams.set('days', '7');\n      requestURL.searchParams.set('q', query);\n      requestURL.searchParams.set('key', config.api_key);\n\n      const response = await fetch(requestURL);\n\n      const json = await response.json();\n\n      if (json.error) {\n        throw new Error(json.error.message);\n      }\n\n      const {\n        current: {\n          // ESLint suppression - This data comes from Apixu and is beyond my control\n          // eslint-disable-next-line camelcase\n          last_updated_epoch,\n          condition: { code: conditionCode },\n          temp_c: tempC,\n          temp_f: tempF,\n        },\n        forecast: { forecastday },\n      } = json;\n\n      const current = {\n        // ESLint suppression - This data comes from Apixu and is beyond my control\n        // eslint-disable-next-line camelcase\n        date: last_updated_epoch * 1000,\n        conditionCode,\n        tempC,\n        tempF,\n      };\n\n      const days = forecastday.map(parseDay);\n\n      const forecast = {\n        location: json.location.name,\n        current,\n        days,\n      };\n\n      window.localStorage.setItem(appCacheKey, JSON.stringify(forecast));\n\n      return dispatch(receiveForecast(forecast));\n    } catch (e) {\n      const { message } = e;\n\n      return dispatch(setError(message));\n    }\n  };\n}\n\nexport function restoreForecastFromCache(forecast: Forecast) {\n  return function restoreForecastFromCacheThunk(dispatch: Function) {\n    dispatch(receiveForecast(forecast));\n\n    return dispatch(fetchForecast());\n  };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResultsView\":\"ResultsView_ResultsView__1WBJ0\",\"Header\":\"ResultsView_Header__14Zg0\",\"end\":\"ResultsView_end__1MCWP\",\"BackButton\":\"ResultsView_BackButton__2Uh30\",\"Now\":\"ResultsView_Now__26F7r\",\"Now_Condition_Text\":\"ResultsView_Now_Condition_Text__2TscT\",\"Now_Body\":\"ResultsView_Now_Body__3snN8\",\"Now_Condition\":\"ResultsView_Now_Condition__F8l7c\",\"icon\":\"ResultsView_icon__3CYnk\",\"TemperaturesTable\":\"ResultsView_TemperaturesTable__1WBot\",\"Days\":\"ResultsView_Days__1Rxud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TempModeToggle\":\"TempModeToggle_TempModeToggle__3O34g\",\"Handle\":\"TempModeToggle_Handle__3VTcC\",\"TempModeToggleActive\":\"TempModeToggle_TempModeToggleActive__hehfn\",\"Inner\":\"TempModeToggle_Inner__tncWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchView_SearchForm__3Cq35\",\"SearchForm_control\":\"SearchView_SearchForm_control__Xd8vM\",\"SearchForm_gps\":\"SearchView_SearchForm_gps__2n8SH\"};","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./store.prod');\n} else {\n  module.exports = require('./store.dev');\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayBlock\":\"DayBlock_DayBlock__1F3So\",\"icon\":\"DayBlock_icon__1mHCv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__3Gsm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__3V0ld\",\"spin\":\"LoadingIndicator_spin__3R1kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorContainer\":\"ErrorContainer_ErrorContainer__3DB_p\"};","import LoadingIndicator from './LoadingIndicator';\n\nexport default LoadingIndicator;\n","// @flow\n\nimport React from 'react';\n\nimport classes from './LoadingIndicator.module.scss';\n\nexport default function LoadingIndicator() {\n  return <div className={`material-icons ${classes.LoadingIndicator}`} aria-label=\"Loading\">sync</div>;\n}\n","import ErrorContainer from './ErrorContainer';\n\nexport default ErrorContainer;\n","// @flow\n\nimport React from 'react';\n\nimport classes from './ErrorContainer.module.scss';\n\ntype Props = {\n  message: string,\n}\n\nexport default function ErrorContainer(props: Props) {\n  const { message } = props;\n\n  return <div className={classes.ErrorContainer}>{ message }</div>;\n}\n","// @flow\n\n/**\n * Flow suppression as it doesn't seem to support React Hooks in my version\n */\n// $FlowFixMe\nimport React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './SearchView.module.scss';\n\nimport { setQuery, setError } from '../../store/actions/ui';\nimport { fetchForecast } from '../../store/actions/forecast';\n\ntype Props = {\n  query: string,\n  changeQuery: Function,\n  doSearch: Function,\n  doSetError: Function,\n}\n\nfunction SearchView(props: Props) {\n  const {\n    query, changeQuery, doSearch, doSetError,\n  } = props;\n\n  const changeListener = useCallback((event) => {\n    changeQuery(event.currentTarget.value.trimStart());\n  }, [changeQuery]);\n\n  const submitListener = useCallback((event) => {\n    event.preventDefault();\n\n    doSearch();\n  }, [doSearch]);\n\n  const geolocationSuccess = useCallback((position) => {\n    const { coords: { latitude, longitude } } = position;\n\n    changeQuery([latitude, longitude].join(','));\n\n    doSearch();\n  }, [changeQuery, doSearch]);\n\n  const geolocationError = useCallback(() => {\n    doSetError('Could not get current position');\n  }, [doSetError]);\n\n  const gpsButtonClickListener = useCallback(() => {\n    if (!navigator || !navigator.geolocation) {\n      setError('Your browser does not support geolocation.');\n\n      return null;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      geolocationSuccess,\n      geolocationError,\n    );\n\n    return null;\n  }, [geolocationSuccess, geolocationError]);\n\n  return (\n    <form action=\"#\" onSubmit={submitListener} className={classes.SearchForm}>\n      <div className={classes.SearchForm_control}>\n        <div>\n          <input type=\"search\" placeholder=\"City\" aria-label=\"Enter your location\" value={query || ''} onChange={changeListener} />\n        </div>\n        <button type=\"submit\" className=\"material-icons\" disabled={query === ''}>search</button>\n      </div>\n      or\n      <button type=\"button\" className={classes.SearchForm_gps} onClick={gpsButtonClickListener}>\n        use my\n        {' '}\n        <u>current position</u>\n      </button>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { ui: { query } } = state;\n\n  return {\n    query,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeQuery: query => dispatch(setQuery(query)),\n    doSearch: () => dispatch(fetchForecast()),\n    doSetError: message => dispatch(setError(message)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchView);\n","import SearchView from './SearchView';\n\nexport default SearchView;\n","import WeatherConditionIcon from './WeatherConditionIcon';\n\nexport default WeatherConditionIcon;\n","// @flow\n\nimport React from 'react';\n\nimport conditions from '../../data/weather-conditions.json';\n\ntype Props = {\n  code: Number,\n}\n\nexport default function WeatherConditionIcon(props: Props) {\n  const { code } = props;\n\n  const condition = conditions[code];\n\n  if (!condition) {\n    throw new Error('Invalid condition code provided.');\n  }\n\n  return (\n    <i\n      aria-label={condition.description}\n      title={condition.description}\n      className={`wi ${condition.icon}`}\n    />\n  );\n}\n","// @flow\n\nimport { useSelector } from 'react-redux';\n\nimport TEMP_MODES from '../data/TEMP_MODES';\n\n/**\n * A custom React-Redux Hook for formatting temperature.\n *\n * @param {number} c Temperature in degrees Celsius\n * @param {number} f Temperature in degrees Fahrenheit\n * @returns {string} Formatted temperature string with the right measurement attached.\n */\nexport default function useTemp(c, f) {\n  const mode = useSelector(state => state.ui.mode);\n\n  const temp = mode === TEMP_MODES.C ? c : f;\n\n  return `${temp}°${mode}`;\n}\n","import DayBlock from './DayBlock';\n\nexport default DayBlock;\n","// @flow\n\nimport React from 'react';\nimport moment from 'moment';\n\nimport classes from './DayBlock.module.scss';\n\nimport type { ForecastDay } from '../../types/ForecastDay';\n\nimport WeatherConditionIcon from '../WeatherConditionIcon';\n\nimport useTemp from '../../hooks/useTemp';\n\ntype Props = ForecastDay;\n\nexport default function DayBlock(props: Props) {\n  const {\n    date, avgTempC, avgTempF, conditionCode,\n  } = props;\n\n  const temperature = useTemp(avgTempC, avgTempF);\n\n  return (\n    <article className={classes.DayBlock}>\n      <time dateTime={date}>{ moment(date).format('dddd') }</time>\n      <span className={classes.icon}>\n        <WeatherConditionIcon code={conditionCode} />\n      </span>\n      { temperature }\n    </article>\n  );\n}\n","// @flow\n\n/**\n * Flow suppression as it doesn't seem to support React Hooks in my version\n */\n// $FlowFixMe\nimport React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './TempModeToggle.module.scss';\n\nimport { setMode } from '../../store/actions/ui';\n\nimport TEMP_MODES from '../../data/TEMP_MODES';\n\ntype Props = {\n  mode: string,\n  changeMode: Function,\n}\n\nfunction TempModeToggle(props: Props) {\n  const { mode, changeMode } = props;\n\n  const keys = Object.keys(TEMP_MODES);\n\n  const otherOptionKey = keys.find(option => TEMP_MODES[option] !== mode);\n\n  if (otherOptionKey === undefined) {\n    throw new Error('Cannot find a temperature mode to toggle to.');\n  }\n\n  const otherOption = TEMP_MODES[otherOptionKey];\n\n  const clickListener = useCallback(() => {\n    changeMode(otherOption);\n  }, [changeMode, otherOption]);\n\n  const buttonClasses = [classes.TempModeToggle];\n\n  if (mode === TEMP_MODES[keys[1]]) {\n    buttonClasses.push(classes.TempModeToggleActive);\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={buttonClasses.join(' ')}\n      onClick={clickListener}\n      aria-label={`Show temperature in °${otherOption}`}\n    >\n      <span className={classes.Inner}>\n        <span>\n          { `°${TEMP_MODES[keys[0]]}` }\n        </span>\n        <span className={classes.Handle} />\n        <span>\n          { `°${TEMP_MODES[keys[1]]}` }\n        </span>\n      </span>\n    </button>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { ui: { mode } } = state;\n\n  return {\n    mode,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeMode: mode => dispatch(setMode(mode)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TempModeToggle);\n","import TempModeToggle from './TempModeToggle';\n\nexport default TempModeToggle;\n","// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport classes from './ResultsView.module.scss';\n\nimport { hideResults } from '../../store/actions/ui';\n\nimport conditions from '../../data/weather-conditions.json';\n\nimport type { ForecastDay } from '../../types/ForecastDay';\nimport type { ForecastCurrent } from '../../types/ForecastCurrent';\n\nimport DayBlock from '../DayBlock';\nimport TempModeToggle from '../TempModeToggle';\nimport WeatherConditionIcon from '../WeatherConditionIcon';\n\nimport useTemp from '../../hooks/useTemp';\n\ntype Props = {\n  current: ForecastCurrent,\n  days: Array<ForecastDay>,\n  goToSearch: Function,\n  query: string,\n}\n\nfunction ResultsView(props: Props) {\n  const {\n    goToSearch, current, days, query,\n  } = props;\n\n  const { tempC, tempF } = current;\n\n  const currentCondition = conditions[current.conditionCode];\n\n  if (!currentCondition) {\n    throw new Error('Invalid condition code provided.');\n  }\n\n  const currentTemperature = useTemp(tempC, tempF);\n\n  const today = days[0];\n\n  const maxTemperature = useTemp(today.maxTempC, today.maxTempF);\n\n  const minTemperature = useTemp(today.minTempC, today.minTempF);\n\n  const avgTemperature = useTemp(today.avgTempC, today.avgTempF);\n\n  return (\n    <section className={classes.ResultsView}>\n      <header className={classes.Header}>\n        <button type=\"button\" aria-label=\"Back to search\" className={`${classes.BackButton} material-icons`} onClick={goToSearch}>arrow_back</button>\n        <h1>{ query }</h1>\n        <span className={classes.end}>\n          <TempModeToggle />\n        </span>\n      </header>\n      <article className={classes.Now}>\n        <time dateTime={current.date}>{ moment(current.date).format('dddd, MMMM Do YYYY') }</time>\n        <div className={classes.Now_Condition_Text}>\n          { currentCondition.description }\n        </div>\n        <section className={classes.Now_Body}>\n          <section className={classes.Now_Condition}>\n            { currentTemperature }\n            <span className={classes.icon}>\n              <WeatherConditionIcon code={current.conditionCode} />\n            </span>\n          </section>\n          <table className={classes.TemperaturesTable}>\n            <tbody>\n              <tr>\n                <th scope=\"row\">Highest</th>\n                <td>\n                  { maxTemperature }\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Lowest</th>\n                <td>\n                  { minTemperature }\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Average</th>\n                <td>\n                  { avgTemperature }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </section>\n      </article>\n      <section className={classes.Days}>\n        { days.map(day => <DayBlock key={moment(day.date).unix()} {...day} />) }\n      </section>\n    </section>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { forecast, ui: { query } } = state;\n\n  return {\n    ...forecast,\n    query,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    goToSearch: () => dispatch(hideResults()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsView);\n","import ResultsView from './ResultsView';\n\nexport default ResultsView;\n","// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './AppContainer.module.scss';\n\nimport LoadingIndicator from '../LoadingIndicator';\nimport ErrorContainer from '../ErrorContainer';\nimport SearchView from '../SearchView';\nimport ResultsView from '../ResultsView';\n\ntype Props = {\n  loading: boolean,\n  showResults: Boolean,\n  error: ?String,\n}\n\nfunction AppContainer(props: Props) {\n  const { showResults, loading, error } = props;\n\n  return (\n    <main className={classes.AppContainer}>\n      { loading && <LoadingIndicator /> }\n      { error && <ErrorContainer message={error} /> }\n      {\n        showResults\n          ? <ResultsView />\n          : <SearchView />\n      }\n    </main>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const { ui: { loading, showResults, error } } = state;\n\n  return {\n    showResults,\n    loading,\n    error,\n  };\n}\n\nexport default connect(mapStateToProps)(AppContainer);\n","import AppContainer from './AppContainer';\n\nexport default AppContainer;\n","// @flow\n\n/**\n * Flow suppression as it doesn't seem to support React Hooks in my version\n */\n// $FlowFixMe\nimport React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from '../../store';\n\nimport { restoreForecastFromCache, appCacheKey } from '../../store/actions/forecast';\n\nimport AppContainer from '../AppContainer';\n\nfunction App() {\n  // Check for previously saved forecast in localStorage\n  useEffect(() => {\n    const cache = JSON.parse(window.localStorage.getItem(appCacheKey));\n\n    if (cache !== null) {\n      store.dispatch(restoreForecastFromCache(cache));\n    }\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './components/App';\n\nconst root = document.getElementById('root');\n\nif (root) {\n  ReactDOM.render(<App />, root);\n} else {\n  throw new Error('Root element not found.');\n}\n","// @flow\n\nimport { combineReducers } from 'redux';\n\nimport TEMP_MODES from '../../data/TEMP_MODES';\n\nimport {\n  SET_QUERY, SET_ERROR, SET_MODE, SHOW_RESULTS, HIDE_RESULTS,\n} from '../actions/ui';\nimport { REQUEST_FORECAST, RECEIVE_FORECAST } from '../actions/forecast';\n\nfunction query(state = null, action) {\n  switch (action.type) {\n    case SET_QUERY:\n      return action.payload.query;\n    case RECEIVE_FORECAST: {\n      const { location } = action.payload.forecast;\n\n      return location;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction mode(state = TEMP_MODES.C, action) {\n  switch (action.type) {\n    case SET_MODE:\n      return action.payload.mode;\n    default:\n      return state;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload.message;\n    case RECEIVE_FORECAST:\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction loading(state = false, action) {\n  switch (action.type) {\n    case REQUEST_FORECAST:\n      return true;\n    case RECEIVE_FORECAST:\n    case SET_ERROR:\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction showResults(state = false, action) {\n  switch (action.type) {\n    case SHOW_RESULTS:\n    case RECEIVE_FORECAST:\n      return true;\n    case HIDE_RESULTS:\n    case SET_ERROR:\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  query,\n  mode,\n  error,\n  loading,\n  showResults,\n});\n","// @flow\n\nimport { combineReducers } from 'redux';\n\nimport ui from './ui';\nimport forecast from './forecast';\n\nexport default combineReducers({\n  ui,\n  forecast,\n});\n","// @flow\n\nimport { RECEIVE_FORECAST } from '../actions/forecast';\n\nimport type { Forecast } from '../../types/Forecast';\n\nexport default function forecast(state: ?Forecast = null, action: Object) {\n  switch (action.type) {\n    case RECEIVE_FORECAST: {\n      const { current, days } = action.payload.forecast;\n\n      return { current, days };\n    }\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport { createStore, applyMiddleware } from 'redux';\nimport ThunkMiddleware from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nexport default createStore(\n  rootReducer,\n  applyMiddleware(ThunkMiddleware),\n);\n"],"sourceRoot":""}